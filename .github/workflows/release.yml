name: Release

on:
  push:
    branches:
      - fix-settings
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run build script
      run: ./build.sh $GITHUB_REF_NAME
    
    - name: Create release notes
      run: git tag -l --format='%(contents:subject)' v0.8.6 > release-notes.txt

    - name: Create Release
      id: create-release
      uses: ncipollo/release-action@v1
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        artifacts: "./polyglotter-$GITHUB_REF_NAME"
        # tag_name: "$GITHUB_REF_NAME"
        # release_name: "polyglotter-$GITHUB_REF_NAME"
        draft: false
        # prerelease: false
        bodyFile: "./release-notes.txt"
        makeLatest: true
        tag: debug
        commit: "$GITHUB_SHA"

    # - name: Upload Release Asset
    #   id: upload-release-asset
    #   uses: actions/upload-release-asset@v1
    #   if: success()
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: "${{ steps.create-release.outputs.upload_url }}"
    #     asset_path: "$(realname ../polyglotter-$GITHUB_REF_NAME.xpi)""
    #     asset_name: "$(basename ${{ steps.find-zip.outputs.zip_file }})"
    #     asset_content_type: application/zip